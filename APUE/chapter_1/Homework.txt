Q1.1:在系统上查证，除根目录外，目录. 和.. 是不同的。
    直接看 ls . 和 ls .. 的打印信息。

Q1.3：分析程序1 - 4的输出，说明进程I D为852和853的进程可能会发生什么情况?
    Linux中，新创建一个进程时，内核会按顺序将下一个可用的进程分配给其使用。每当进程号到达32767的限制时，内核将重置进程号计数器，以便从小整数重新开始分配。 分配方式，一旦进程号大到达32767，内核会将进程重置为300，而不是1，是因为低数值的进程号为系统进程和守护进程长期占用。
    cat /proc/sys/kernel/pid_max 可以查看最大进程数
    参考：http://blog.csdn.net/m0_37561165/article/details/70290510

Q1.3:在1 . 7节中，perror的参数是用ANSI C的属性const定义的，而strerror的整型参数则没有用此属性定义，为什么?
    void perror(const char *s);
    char *strerror(int errnum);
    perror 由于此处参数接受的是字符串的首地址,加入const限定使函数内部不会对原有的数据改变。
    strerror 参数传递给了函数内部的形参，对于原有的数据不会有影响。

Q1.4:附录B包含了出错处理函数err_sys，当调用该函数时，保存了errno的值，为什么?
    调用fflush，fprintf和vprintf函数可修改errno的值。如果它的值变了但没有保存，则最终显示的错误信息并非当前函数调用的错误信息。

Q1.5：若日历时间存放在带符号的3 2位整型数中，那么到哪一年它将溢出?
    1971-01-01(00:00:00) + (2^31 - 1)s
    前面是国际标准时间UTC(格林尼治标准时间)，后面是

Q1.6:若进程时间存放在带符号的3 2位整型数中，而且每秒为1 0 0滴答，那么经过多少天后该时间值将会溢出?
    ((2^31 - 1)/100s)/(12*60*60)
